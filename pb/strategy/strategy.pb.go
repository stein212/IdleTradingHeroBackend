// RUN THE FOLLOWING COMMAND AFTER EVERY CHANGE
// for python
// python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. strategy.proto
// for go
/// protoc -I . --go_out=plugins=grpc:pb/strategy strategy.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: strategy.proto

package strategy_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HistoryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Length int32  `protobuf:"varint,2,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *HistoryParams) Reset() {
	*x = HistoryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryParams) ProtoMessage() {}

func (x *HistoryParams) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryParams.ProtoReflect.Descriptor instead.
func (*HistoryParams) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{0}
}

func (x *HistoryParams) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *HistoryParams) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

// Dictionary entry
type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string    `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value []float64 `protobuf:"fixed64,2,rep,packed,name=Value,proto3" json:"Value,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{1}
}

func (x *TimeSeries) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TimeSeries) GetValue() []float64 {
	if x != nil {
		return x.Value
	}
	return nil
}

// List of dictionary entries
type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TS []*TimeSeries `protobuf:"bytes,1,rep,name=TS,proto3" json:"TS,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{2}
}

func (x *History) GetTS() []*TimeSeries {
	if x != nil {
		return x.TS
	}
	return nil
}

type Tmp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID  string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Tmp int32  `protobuf:"varint,2,opt,name=tmp,proto3" json:"tmp,omitempty"`
}

func (x *Tmp) Reset() {
	*x = Tmp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tmp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tmp) ProtoMessage() {}

func (x *Tmp) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tmp.ProtoReflect.Descriptor instead.
func (*Tmp) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{3}
}

func (x *Tmp) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Tmp) GetTmp() int32 {
	if x != nil {
		return x.Tmp
	}
	return 0
}

type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Asset       string          `protobuf:"bytes,2,opt,name=Asset,proto3" json:"Asset,omitempty"`
	Strategy    string          `protobuf:"bytes,3,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	Parameters  *_struct.Struct `protobuf:"bytes,4,opt,name=Parameters,proto3" json:"Parameters,omitempty"`
	Capital     int32           `protobuf:"varint,5,opt,name=Capital,proto3" json:"Capital,omitempty"`
	Instrument  string          `protobuf:"bytes,6,opt,name=Instrument,proto3" json:"Instrument,omitempty"`
	Granularity string          `protobuf:"bytes,7,opt,name=Granularity,proto3" json:"Granularity,omitempty"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{4}
}

func (x *Selection) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Selection) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Selection) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *Selection) GetParameters() *_struct.Struct {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Selection) GetCapital() int32 {
	if x != nil {
		return x.Capital
	}
	return 0
}

func (x *Selection) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *Selection) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

type StartAlgorithmParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *StartAlgorithmParam) Reset() {
	*x = StartAlgorithmParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAlgorithmParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAlgorithmParam) ProtoMessage() {}

func (x *StartAlgorithmParam) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAlgorithmParam.ProtoReflect.Descriptor instead.
func (*StartAlgorithmParam) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{5}
}

func (x *StartAlgorithmParam) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type StartAlgorithmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *StartAlgorithmResponse) Reset() {
	*x = StartAlgorithmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAlgorithmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAlgorithmResponse) ProtoMessage() {}

func (x *StartAlgorithmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAlgorithmResponse.ProtoReflect.Descriptor instead.
func (*StartAlgorithmResponse) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{6}
}

func (x *StartAlgorithmResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopAlgorithmParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *StopAlgorithmParam) Reset() {
	*x = StopAlgorithmParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAlgorithmParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAlgorithmParam) ProtoMessage() {}

func (x *StopAlgorithmParam) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAlgorithmParam.ProtoReflect.Descriptor instead.
func (*StopAlgorithmParam) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{7}
}

func (x *StopAlgorithmParam) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type StopAlgorithmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *StopAlgorithmResponse) Reset() {
	*x = StopAlgorithmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAlgorithmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAlgorithmResponse) ProtoMessage() {}

func (x *StopAlgorithmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAlgorithmResponse.ProtoReflect.Descriptor instead.
func (*StopAlgorithmResponse) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{8}
}

func (x *StopAlgorithmResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetBalanceParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetBalanceParam) Reset() {
	*x = GetBalanceParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceParam) ProtoMessage() {}

func (x *GetBalanceParam) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceParam.ProtoReflect.Descriptor instead.
func (*GetBalanceParam) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{9}
}

func (x *GetBalanceParam) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetBalanceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float64 `protobuf:"fixed64,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *GetBalanceRes) Reset() {
	*x = GetBalanceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRes) ProtoMessage() {}

func (x *GetBalanceRes) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRes.ProtoReflect.Descriptor instead.
func (*GetBalanceRes) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{10}
}

func (x *GetBalanceRes) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V             float64 `protobuf:"fixed64,1,opt,name=v,proto3" json:"v,omitempty"`
	T             float64 `protobuf:"fixed64,2,opt,name=t,proto3" json:"t,omitempty"`
	O             float64 `protobuf:"fixed64,3,opt,name=o,proto3" json:"o,omitempty"`
	H             float64 `protobuf:"fixed64,4,opt,name=h,proto3" json:"h,omitempty"`
	L             float64 `protobuf:"fixed64,5,opt,name=l,proto3" json:"l,omitempty"`
	C             float64 `protobuf:"fixed64,6,opt,name=c,proto3" json:"c,omitempty"`
	Action        float64 `protobuf:"fixed64,7,opt,name=action,proto3" json:"action,omitempty"`
	BalanceChange float64 `protobuf:"fixed64,8,opt,name=balance_change,json=balanceChange,proto3" json:"balance_change,omitempty"`
	Stock         float64 `protobuf:"fixed64,9,opt,name=stock,proto3" json:"stock,omitempty"`
	Balance       float64 `protobuf:"fixed64,10,opt,name=balance,proto3" json:"balance,omitempty"`
	Return        float64 `protobuf:"fixed64,11,opt,name=return,proto3" json:"return,omitempty"`
	Alpha         float64 `protobuf:"fixed64,12,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Sharpe        float64 `protobuf:"fixed64,13,opt,name=sharpe,proto3" json:"sharpe,omitempty"`
	AnnualSharpe  float64 `protobuf:"fixed64,14,opt,name=annual_sharpe,json=annualSharpe,proto3" json:"annual_sharpe,omitempty"`
	Sortino       float64 `protobuf:"fixed64,15,opt,name=sortino,proto3" json:"sortino,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_strategy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_strategy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_strategy_proto_rawDescGZIP(), []int{11}
}

func (x *Statistics) GetV() float64 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *Statistics) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *Statistics) GetO() float64 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *Statistics) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *Statistics) GetL() float64 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *Statistics) GetC() float64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *Statistics) GetAction() float64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *Statistics) GetBalanceChange() float64 {
	if x != nil {
		return x.BalanceChange
	}
	return 0
}

func (x *Statistics) GetStock() float64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Statistics) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Statistics) GetReturn() float64 {
	if x != nil {
		return x.Return
	}
	return 0
}

func (x *Statistics) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *Statistics) GetSharpe() float64 {
	if x != nil {
		return x.Sharpe
	}
	return 0
}

func (x *Statistics) GetAnnualSharpe() float64 {
	if x != nil {
		return x.AnnualSharpe
	}
	return 0
}

func (x *Statistics) GetSortino() float64 {
	if x != nil {
		return x.Sortino
	}
	return 0
}

var File_strategy_proto protoreflect.FileDescriptor

var file_strategy_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37,
	0x0a, 0x0d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a,
	0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x02, 0x54, 0x53, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x02, 0x54, 0x53, 0x22, 0x27, 0x0a, 0x03, 0x54, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6d, 0x70, 0x22, 0xe2, 0x01,
	0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x37, 0x0a,
	0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x16, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22,
	0x2d, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x21,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd4, 0x02, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x6e, 0x6e,
	0x75, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x6f, 0x32, 0xcb, 0x05, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x19,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x26,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x25, 0x2e,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x03, 0x41, 0x63, 0x74, 0x12, 0x13, 0x2e,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6d, 0x70, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x6d, 0x70, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1f, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_strategy_proto_rawDescOnce sync.Once
	file_strategy_proto_rawDescData = file_strategy_proto_rawDesc
)

func file_strategy_proto_rawDescGZIP() []byte {
	file_strategy_proto_rawDescOnce.Do(func() {
		file_strategy_proto_rawDescData = protoimpl.X.CompressGZIP(file_strategy_proto_rawDescData)
	})
	return file_strategy_proto_rawDescData
}

var file_strategy_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_strategy_proto_goTypes = []interface{}{
	(*HistoryParams)(nil),          // 0: strategy_proto.HistoryParams
	(*TimeSeries)(nil),             // 1: strategy_proto.TimeSeries
	(*History)(nil),                // 2: strategy_proto.History
	(*Tmp)(nil),                    // 3: strategy_proto.Tmp
	(*Selection)(nil),              // 4: strategy_proto.Selection
	(*StartAlgorithmParam)(nil),    // 5: strategy_proto.StartAlgorithmParam
	(*StartAlgorithmResponse)(nil), // 6: strategy_proto.StartAlgorithmResponse
	(*StopAlgorithmParam)(nil),     // 7: strategy_proto.StopAlgorithmParam
	(*StopAlgorithmResponse)(nil),  // 8: strategy_proto.StopAlgorithmResponse
	(*GetBalanceParam)(nil),        // 9: strategy_proto.GetBalanceParam
	(*GetBalanceRes)(nil),          // 10: strategy_proto.GetBalanceRes
	(*Statistics)(nil),             // 11: strategy_proto.Statistics
	(*_struct.Struct)(nil),         // 12: google.protobuf.Struct
}
var file_strategy_proto_depIdxs = []int32{
	1,  // 0: strategy_proto.History.TS:type_name -> strategy_proto.TimeSeries
	12, // 1: strategy_proto.Selection.Parameters:type_name -> google.protobuf.Struct
	4,  // 2: strategy_proto.StrategyService.InitialiseAlgorithm:input_type -> strategy_proto.Selection
	5,  // 3: strategy_proto.StrategyService.StartAlgorithm:input_type -> strategy_proto.StartAlgorithmParam
	7,  // 4: strategy_proto.StrategyService.StopAlgorithm:input_type -> strategy_proto.StopAlgorithmParam
	3,  // 5: strategy_proto.StrategyService.Act:input_type -> strategy_proto.Tmp
	3,  // 6: strategy_proto.StrategyService.GetStatistics:input_type -> strategy_proto.Tmp
	0,  // 7: strategy_proto.StrategyService.GetData:input_type -> strategy_proto.HistoryParams
	0,  // 8: strategy_proto.StrategyService.GetIndicators:input_type -> strategy_proto.HistoryParams
	0,  // 9: strategy_proto.StrategyService.GetPerformances:input_type -> strategy_proto.HistoryParams
	9,  // 10: strategy_proto.StrategyService.GetBalance:input_type -> strategy_proto.GetBalanceParam
	11, // 11: strategy_proto.StrategyService.InitialiseAlgorithm:output_type -> strategy_proto.Statistics
	6,  // 12: strategy_proto.StrategyService.StartAlgorithm:output_type -> strategy_proto.StartAlgorithmResponse
	8,  // 13: strategy_proto.StrategyService.StopAlgorithm:output_type -> strategy_proto.StopAlgorithmResponse
	11, // 14: strategy_proto.StrategyService.Act:output_type -> strategy_proto.Statistics
	11, // 15: strategy_proto.StrategyService.GetStatistics:output_type -> strategy_proto.Statistics
	2,  // 16: strategy_proto.StrategyService.GetData:output_type -> strategy_proto.History
	2,  // 17: strategy_proto.StrategyService.GetIndicators:output_type -> strategy_proto.History
	2,  // 18: strategy_proto.StrategyService.GetPerformances:output_type -> strategy_proto.History
	10, // 19: strategy_proto.StrategyService.GetBalance:output_type -> strategy_proto.GetBalanceRes
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_strategy_proto_init() }
func file_strategy_proto_init() {
	if File_strategy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_strategy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tmp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAlgorithmParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAlgorithmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAlgorithmParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAlgorithmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_strategy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_strategy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_strategy_proto_goTypes,
		DependencyIndexes: file_strategy_proto_depIdxs,
		MessageInfos:      file_strategy_proto_msgTypes,
	}.Build()
	File_strategy_proto = out.File
	file_strategy_proto_rawDesc = nil
	file_strategy_proto_goTypes = nil
	file_strategy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StrategyServiceClient is the client API for StrategyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StrategyServiceClient interface {
	// Initialise indicator, strategy, parameters
	InitialiseAlgorithm(ctx context.Context, in *Selection, opts ...grpc.CallOption) (*Statistics, error)
	StartAlgorithm(ctx context.Context, in *StartAlgorithmParam, opts ...grpc.CallOption) (*StartAlgorithmResponse, error)
	StopAlgorithm(ctx context.Context, in *StopAlgorithmParam, opts ...grpc.CallOption) (*StopAlgorithmResponse, error)
	Act(ctx context.Context, in *Tmp, opts ...grpc.CallOption) (*Statistics, error)
	// Get statistics
	GetStatistics(ctx context.Context, in *Tmp, opts ...grpc.CallOption) (*Statistics, error)
	// Get past data
	GetData(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error)
	// Get past indicators
	GetIndicators(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error)
	// Get past performances
	GetPerformances(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error)
	// Get strategy balance
	GetBalance(ctx context.Context, in *GetBalanceParam, opts ...grpc.CallOption) (*GetBalanceRes, error)
}

type strategyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStrategyServiceClient(cc grpc.ClientConnInterface) StrategyServiceClient {
	return &strategyServiceClient{cc}
}

func (c *strategyServiceClient) InitialiseAlgorithm(ctx context.Context, in *Selection, opts ...grpc.CallOption) (*Statistics, error) {
	out := new(Statistics)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/InitialiseAlgorithm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) StartAlgorithm(ctx context.Context, in *StartAlgorithmParam, opts ...grpc.CallOption) (*StartAlgorithmResponse, error) {
	out := new(StartAlgorithmResponse)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/StartAlgorithm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) StopAlgorithm(ctx context.Context, in *StopAlgorithmParam, opts ...grpc.CallOption) (*StopAlgorithmResponse, error) {
	out := new(StopAlgorithmResponse)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/StopAlgorithm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) Act(ctx context.Context, in *Tmp, opts ...grpc.CallOption) (*Statistics, error) {
	out := new(Statistics)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/Act", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) GetStatistics(ctx context.Context, in *Tmp, opts ...grpc.CallOption) (*Statistics, error) {
	out := new(Statistics)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) GetData(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error) {
	out := new(History)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) GetIndicators(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error) {
	out := new(History)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/GetIndicators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) GetPerformances(ctx context.Context, in *HistoryParams, opts ...grpc.CallOption) (*History, error) {
	out := new(History)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/GetPerformances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) GetBalance(ctx context.Context, in *GetBalanceParam, opts ...grpc.CallOption) (*GetBalanceRes, error) {
	out := new(GetBalanceRes)
	err := c.cc.Invoke(ctx, "/strategy_proto.StrategyService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StrategyServiceServer is the server API for StrategyService service.
type StrategyServiceServer interface {
	// Initialise indicator, strategy, parameters
	InitialiseAlgorithm(context.Context, *Selection) (*Statistics, error)
	StartAlgorithm(context.Context, *StartAlgorithmParam) (*StartAlgorithmResponse, error)
	StopAlgorithm(context.Context, *StopAlgorithmParam) (*StopAlgorithmResponse, error)
	Act(context.Context, *Tmp) (*Statistics, error)
	// Get statistics
	GetStatistics(context.Context, *Tmp) (*Statistics, error)
	// Get past data
	GetData(context.Context, *HistoryParams) (*History, error)
	// Get past indicators
	GetIndicators(context.Context, *HistoryParams) (*History, error)
	// Get past performances
	GetPerformances(context.Context, *HistoryParams) (*History, error)
	// Get strategy balance
	GetBalance(context.Context, *GetBalanceParam) (*GetBalanceRes, error)
}

// UnimplementedStrategyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStrategyServiceServer struct {
}

func (*UnimplementedStrategyServiceServer) InitialiseAlgorithm(context.Context, *Selection) (*Statistics, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitialiseAlgorithm not implemented")
}
func (*UnimplementedStrategyServiceServer) StartAlgorithm(context.Context, *StartAlgorithmParam) (*StartAlgorithmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartAlgorithm not implemented")
}
func (*UnimplementedStrategyServiceServer) StopAlgorithm(context.Context, *StopAlgorithmParam) (*StopAlgorithmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopAlgorithm not implemented")
}
func (*UnimplementedStrategyServiceServer) Act(context.Context, *Tmp) (*Statistics, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Act not implemented")
}
func (*UnimplementedStrategyServiceServer) GetStatistics(context.Context, *Tmp) (*Statistics, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}
func (*UnimplementedStrategyServiceServer) GetData(context.Context, *HistoryParams) (*History, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedStrategyServiceServer) GetIndicators(context.Context, *HistoryParams) (*History, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndicators not implemented")
}
func (*UnimplementedStrategyServiceServer) GetPerformances(context.Context, *HistoryParams) (*History, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerformances not implemented")
}
func (*UnimplementedStrategyServiceServer) GetBalance(context.Context, *GetBalanceParam) (*GetBalanceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}

func RegisterStrategyServiceServer(s *grpc.Server, srv StrategyServiceServer) {
	s.RegisterService(&_StrategyService_serviceDesc, srv)
}

func _StrategyService_InitialiseAlgorithm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Selection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).InitialiseAlgorithm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/InitialiseAlgorithm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).InitialiseAlgorithm(ctx, req.(*Selection))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_StartAlgorithm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartAlgorithmParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).StartAlgorithm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/StartAlgorithm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).StartAlgorithm(ctx, req.(*StartAlgorithmParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_StopAlgorithm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopAlgorithmParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).StopAlgorithm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/StopAlgorithm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).StopAlgorithm(ctx, req.(*StopAlgorithmParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_Act_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tmp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).Act(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/Act",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).Act(ctx, req.(*Tmp))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tmp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).GetStatistics(ctx, req.(*Tmp))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).GetData(ctx, req.(*HistoryParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_GetIndicators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).GetIndicators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/GetIndicators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).GetIndicators(ctx, req.(*HistoryParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_GetPerformances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).GetPerformances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/GetPerformances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).GetPerformances(ctx, req.(*HistoryParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy_proto.StrategyService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).GetBalance(ctx, req.(*GetBalanceParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _StrategyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "strategy_proto.StrategyService",
	HandlerType: (*StrategyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitialiseAlgorithm",
			Handler:    _StrategyService_InitialiseAlgorithm_Handler,
		},
		{
			MethodName: "StartAlgorithm",
			Handler:    _StrategyService_StartAlgorithm_Handler,
		},
		{
			MethodName: "StopAlgorithm",
			Handler:    _StrategyService_StopAlgorithm_Handler,
		},
		{
			MethodName: "Act",
			Handler:    _StrategyService_Act_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _StrategyService_GetStatistics_Handler,
		},
		{
			MethodName: "GetData",
			Handler:    _StrategyService_GetData_Handler,
		},
		{
			MethodName: "GetIndicators",
			Handler:    _StrategyService_GetIndicators_Handler,
		},
		{
			MethodName: "GetPerformances",
			Handler:    _StrategyService_GetPerformances_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _StrategyService_GetBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "strategy.proto",
}
